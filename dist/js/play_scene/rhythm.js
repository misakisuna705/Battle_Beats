class Notes extends Phaser.Group{constructor({game:t,parent:e,name:s,addToStage:i,enableBody:a,physicsBodyType:h,index:l}){super(t,e,s,i,a,h,l);for(let t=0;t<25;++t)this.add(new Note({game:this.game,key:"note",index:l}));this.setAll("exists",!1),this.setAll("checkWorldBounds",!0),this.setAll("outOfBoundsKill",!0),this.setAll("anchor.x",.5),this.setAll("anchor.y",1)}}class Note extends Phaser.Sprite{constructor({game:t,x:e,y:s,key:i,frame:a,index:h}){super(t,e,s,i,a),this.index=h,this.perfect_time=0,this.point=0,this.tail=null,this.events.onKilled.add(this.hit,this)}hit(){this.game.state.getCurrentState().score.point_upgrade(this.point),this.tail&&this.tail.hit()}update_scale(){const t=this.game.state.getCurrentState();this.scale.x+=t.note_enlarge_scale_x,this.scale.y+=t.note_enlarge_scale_y}}class Tails extends Phaser.Group{constructor({game:t,parent:e,name:s,addToStage:i,enableBody:a,physicsBodyType:h,index:l}){super(t,e,s,i,a,h,l);for(let t=0;t<25;++t)this.add(new Tail({game:this.game,key:"tail",index:l}));this.setAll("exists",!1),this.setAll("checkWorldBounds",!0),this.setAll("outOfBoundsKill",!0),this.setAll("anchor.x",.5),this.setAll("anchor.y",1)}}class Tail extends Phaser.Sprite{constructor({game:t,x:e,y:s,key:i,frame:a,index:h}){super(t,e,s,i,a),this.index=h,this.ispressed=!1,this.timer=null,this.bonus=2,this.bonus_time=0,this.decrement=this.game.state.getCurrentState().init_velocity_y/1e3*20/this.height,this.events.onKilled.add(function(){console.log("kill")},this)}hit(){this.ispressed=!0,this.timer=this.game.time.create(),this.timer.repeat(20,this.bonus_time/20,()=>{if(this.ispressed)if(this.game.state.getCurrentState().target_buttons[this.index].presskey.isDown)this.body.velocity.y=0,this.body.velocity.x=0,this.scale.y<0?this.scale.y=0:this.scale.y-=this.decrement,this.game.state.getCurrentState().score.bonus_upgrade(this.bonus);else{this.ispressed=!1;this.game.state.getCurrentState();this.body.velocity.y=this.game.state.getCurrentState().init_velocity_y,this.body.velocity.x=this.game.state.getCurrentState().init_velocity_x[this.index]}},this),this.timer.onComplete.add(()=>{this.game.state.getCurrentState().target_buttons[this.index].presskey.isDown&&(this.scale.y=0,console.log(this.exists),console.log(this.alive),console.log(this.visible),this.kill())}),this.timer.start()}update_scale(){this.game.state.getCurrentState();this.scale.y+=this.tail_enlarge_scale_y}}