class Play_Scene extends Phaser.State{init(){const t=this.game;this.song_beatmap=song_config[t.active_song].beatmap[t.active_level]}create(){const t=this.game,e=t.time.events,i=t.active_song,s=button_config.play_scene,a=this.init_velocity_y=song_config[i].info.bpm*song_config[i].info.nX;this.physics.startSystem(Phaser.Physics.ARCADE),this.bg_back=new Img({game:t},{x:240,y:-20,key:"bg_back"}),this.game.time.events.loop(30,this.bg_rotate,this),this.bg_middle=new Img({game:t},{x:240,y:320,key:"bg_middle"}),this.bg_front=new Img({game:t},{x:240,y:320,key:"bg_front"}),this.track_start_height=120,this.track_start_width=220,this.track_end_height=s.target_buttons[0].y,this.track_length=this.track_end_height-this.track_start_height,this.pass_through_time=this.track_length/a*1e3,this.note_init_scale_x=this.track_start_width/(this.game.width*(1-(this.game.height-this.track_end_height)/this.game.height)),this.note_init_scale_y=.1,this.tail_init_scale_x=.2,this.note_enlarge_scale_x=(1-this.note_init_scale_x)/this.pass_through_time*20,this.note_enlarge_scale_y=(1-this.note_init_scale_y)/(this.pass_through_time/20),this.dispatch_points=[],this.init_velocity_x=[],this.acceleration_x=[];for(let t=0;t<4;t++)this.dispatch_points[t]=(2*t+1)/8*this.track_start_width+(this.game.width-this.track_start_width)/2,this.init_velocity_x[t]=(s.target_buttons[t].x-this.dispatch_points[t])/this.track_length*a;this.tail_angle=[Math.atan((this.dispatch_points[0]-s.target_buttons[0].x)/this.track_length),Math.atan((this.dispatch_points[1]-s.target_buttons[1].x)/this.track_length),-Math.atan((this.dispatch_points[1]-s.target_buttons[1].x)/this.track_length),-Math.atan((this.dispatch_points[0]-s.target_buttons[0].x)/this.track_length)],this.tails=[new Tails({game:t,enableBody:!0,index:0}),new Tails({game:t,enableBody:!0,index:1}),new Tails({game:t,enableBody:!0,index:2}),new Tails({game:t,enableBody:!0,index:3})],this.notes=[new Notes({game:t,enableBody:!0,index:0}),new Notes({game:t,enableBody:!0,index:1}),new Notes({game:t,enableBody:!0,index:2}),new Notes({game:t,enableBody:!0,index:3})],this.target_buttons=[new Button({game:t,callback:this.hit_button_0,callbackContext:this},s.target_buttons[0]),new Button({game:t,callback:this.hit_button_1,callbackContext:this},s.target_buttons[1]),new Button({game:t,callback:this.hit_button_2,callbackContext:this},s.target_buttons[2]),new Button({game:t,callback:this.hit_button_3,callbackContext:this},s.target_buttons[3])];for(let t=0;t<4;t++)this.target_buttons[t].presskey.onUp.add(this.resetButton,this,0,t);const h=this.song_beatmap,n=h.length;for(let t=0;t<n;++t)e.add(h[t][1],this.dispatch_note,this,t);this.song_start_time=0,this.song_audio=t.add.audio(song_config[i].AudioFilename,1,!1),e.add(this.pass_through_time,this.play,this),this.timer=new Timer({game:t,x:12,y:36,text:"time: 0:00",style:{fill:"#ffffff"}}),this.senia=new HERO(120,120,80,180,t,this,hero_config[0],Phaser.Keyboard.D,!1),this.seti=new HERO(120,120,80,280,t,this,hero_config[1],Phaser.Keyboard.F,!1),this.rita=new HERO(100,120,400,180,t,this,hero_config[2],Phaser.Keyboard.J,!1),this.hugo=new HERO(100,120,400,280,t,this,hero_config[3],Phaser.Keyboard.K,!1),this.rita.scale.x*=-1,this.hugo.scale.x*=-1,this.senia.start(),this.seti.start(),this.rita.start(),this.hugo.start(),this.score=new Score({game:t,x:240,y:240,key:"score_board"})}resetButton(t,e){this.target_buttons[e].frame=0}bg_rotate(){this.bg_back.angle+=1}play(){this.song_start_time=this.game.time.now,this.song_audio.play(),this.song_audio.onStop.add(()=>{this.score.score_upload()},this)}dispatch_note(t){const e=this.init_velocity_y,i=(button_config.play_scene,this.song_beatmap[t]),s=i[0],a=i[1],h=this.dispatch_points[s],n=this.notes[s].getFirstExists(!1,!1,h,this.track_start_height);if(n.exists=!0,n.body.velocity.y=e,n.body.velocity.x=this.init_velocity_x[s],n.perfect_time=a,n.point=0,n.scale.setTo(this.note_init_scale_x,this.note_init_scale_y),n.scale_timer=this.game.time.create(),n.scale_timer.repeat(20,this.pass_through_time/20,n.update_scale,n),n.scale_timer.start(),3===i.length){const t=n.tail=this.tails[s].getFirstExists(!1,!1,h,this.track_start_height-10);t.exists=!0,t.bonus_time=i[2]-a,t.body.velocity.x=this.init_velocity_x[s],t.body.velocity.y=e,t.rotation=this.tail_angle[s],t.H=this.init_velocity_y*t.bonus_time/1e3,t.scale.setTo(1,1),t.tail_enlarge_scale_y=t.H/t.height/this.pass_through_time*20,t.scale.setTo(this.tail_init_scale_x,0),t.scale_timer=this.game.time.create(),t.scale_timer.repeat(20,this.pass_through_time/20,t.update_scale,t),t.scale_timer.start(),t.events.onKilled.add(()=>{t.scale_timer.stop()},this)}else n.tail=null}hit_button_0(){let t=null,e=1/0;if(this.target_buttons[0].frame=1,this.notes[0].getAll("exists",!0).forEach(i=>{i.perfect_time<e&&(t=i,e=i.perfect_time)}),t){const e=Math.abs(this.game.time.now-this.song_start_time-t.perfect_time);e<300&&(t.point=e<30?300:e<150?200:e<270?100:50,t.kill())}}hit_button_1(){let t=null,e=1/0;if(this.target_buttons[1].frame=1,this.notes[1].getAll("exists",!0).forEach(i=>{i.perfect_time<e&&(t=i,e=i.perfect_time)}),t){const e=Math.abs(this.game.time.now-this.song_start_time-t.perfect_time);e<300&&(t.point=e<30?300:e<150?200:e<270?100:50,t.kill())}}hit_button_2(){let t=null,e=1/0;if(this.target_buttons[2].frame=1,this.notes[2].getAll("exists",!0).forEach(i=>{i.perfect_time<e&&(t=i,e=i.perfect_time)}),t){const e=Math.abs(this.game.time.now-this.song_start_time-t.perfect_time);e<300&&(t.point=e<30?300:e<150?200:e<270?100:50,t.kill())}}hit_button_3(){let t=null,e=1/0;if(this.target_buttons[3].frame=1,this.notes[3].getAll("exists",!0).forEach(i=>{i.perfect_time<e&&(t=i,e=i.perfect_time)}),t){const e=Math.abs(this.game.time.now-this.song_start_time-t.perfect_time);e<300&&(t.point=e<30?300:e<150?200:e<270?100:50,t.kill())}}}